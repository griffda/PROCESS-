#
#  GitLab CI configuration file for PROCESS repository
#
#  J. Morris
#  M. Kumar
#  K. Zarebski
#
#  UKAEA
#  06/08/2020
#
#-----------------------------------------------------

stages:
  - build
  - testing
  - quality
  - freia
  - pages

.before_script_template: &build-freia-setup
  before_script:
    - export LOGNAME=root
    - source /etc/profile.d/modules.sh
    - module use /usr/local/modules/default
    - module unload python
    - module load python/3.7
    - module load texlive/2017
    - module unload ifort 
    - module load gfortran
    - export GTEST=/home/PROCESS/testing_frameworks/googletest/googletest
    - echo ld_library_path=$LD_LIBRARY_PATH
    # Modify PATH so "ford" command can be found in cmake file
    - export PATH=$PATH:~/.local/bin
    # Python3 uses the locale to choose the file encoding it uses
    # Without this it will use ASCII encoding and Ford will fail
    - export LANG=en_GB.utf8

.before_test_template: &test-setup
  image: git.ccfe.ac.uk:4567/process/process/python-coverage-ci-image:latest
  before_script:
    - pip install --upgrade pip
    - pip install virtualenv
    - virtualenv ~/testenv
    - source ~/testenv/bin/activate
    - pip install --find-links=process_dist process

#-----------------
#  Build
#-----------------

make:
  stage: build
  image: git.ccfe.ac.uk:4567/process/process/python-coverage-ci-image:latest
  artifacts:
    paths:
      - process_dist/process-*.tar.gz
      - process_dist/process-*.whl
    expire_in: 1 week
  script:
    - cmake -H. -Bbuild
    - cmake --build build
    - python setup.py sdist -d process_dist
    - python setup.py bdist_wheel -d process_dist

#-----------------
#  Testing
#-----------------

unit:
  when: on_success
  stage: testing
  <<: *test-setup
  script:
    - pytest tests/unit

integration:
  when: on_success
  stage: testing
  <<: *test-setup
  script:
    - pytest tests/integration

regression:
  when: on_success
  stage: testing
  <<: *test-setup
  script:
    - pytest tests/regression

baseline_2019:
  when: on_success
  stage: testing
  <<: *test-setup
  script:
    - process -i tracking/baseline_2019/baseline_2019_IN.DAT
    - > 
      python process/io/mfile_comparison.py
      -f tracking/baseline_2019/baseline_2019_MFILE.DAT tracking/baseline_2019/ref_baseline_2019_MFILE.DAT 
      --acc 1.0 
      --baseline
    - > 
      python process/io/mfile_comparison.py
      -f tracking/baseline_2019/baseline_2019_MFILE.DAT tracking/baseline_2019/ref_baseline_2019_MFILE.DAT 
      --acc 10.0 
      --baseline


baseline_2018:
  when: on_success
  stage: testing
  <<: *test-setup
  script:
    - process -i tracking/baseline_2018/baseline_2018_IN.DAT
    - > 
      python process/io/mfile_comparison.py
      -f tracking/baseline_2018/baseline_2018_MFILE.DAT tracking/baseline_2018/ref_baseline_2018_MFILE.DAT 
      --acc 1.0 
      --baseline
    - > 
      python process/io/mfile_comparison.py
      -f tracking/baseline_2018/baseline_2018_MFILE.DAT tracking/baseline_2018/ref_baseline_2018_MFILE.DAT 
      --acc 10.0 
      --baseline

step_input:
  when: on_success
  only: 
    - develop
  stage: testing
  image: git.ccfe.ac.uk:4567/process/process/python-coverage-ci-image:latest
  stage: pages
  script:
    - git config --global user.email "james.morris2@ukaea.uk"
    - git config --global user.name "James Morris"
    - git log -1 --format=oneline >> commit_msg.txt
    - MESSAGE=$(git describe)
    - echo $MESSAGE
    - pwd
    - cat commit_msg.txt
    - git clone https://smuldrew:Lxf8sdD9uvMxfdU6UEYS@git.ccfe.ac.uk/smuldrew/process-step.git
    - cp commit_msg.txt process-step
    - cd process-step
    - ls
    - date >> date_of_push.txt
    - git add commit_msg.txt date_of_push.txt
    - git commit -m "PROCESS commit - $MESSAGE"
    - git config --global push.default matching
    - git push origin

#-----------------
#  Quality
#-----------------

line_length:
  when: on_success
  stage: quality
  image: git.ccfe.ac.uk:4567/process/process/python-coverage-ci-image:latest
  script:
    - pwd
    - python3 utilities/line_length_standard.py

#-----------------
#  Freia
#-----------------

make_freia:
  only:
    - develop
  stage: freia
  <<: *build-freia-setup
  script:
    - pwd
    - gcc --version
    - ls -lah
    - rm -rf build
    - cmake3 -H. -Bbuild
    - cmake3 --build build
    - ls bin -lah
    - echo "Test "
  artifacts:
    expire_in: 2 hrs
    paths:
      - bin/process.exe
      - bin/process_GTest.exe
      - bin/libPROCESS_calc_engine.so
  tags:
    - freia

make_dicts_freia:
  only:
    - develop
  stage: freia
  <<: *build-freia-setup
  script:
    - pwd
    - gcc --version
    - ls -lah
    - cmake3 -H. -Bbuild
    - cmake3 --build build --target dicts
  tags:
    - freia



baseline_2019_freia:
  when: on_success
  only:
    - develop
  stage: freia
  <<: *build-freia-setup
  script:
    - pwd
    - cmake3 -H. -Bbuild
    - cmake3 --build build
    - cmake3 --build build --target dicts
    - export PYTHONPATH=$PYTHONPATH:/builds/process/process/utilities/
    - cd tracking/baseline_2019
    - ./../../bin/process.exe baseline_2019_IN.DAT
    - > 
      python ../../utilities/mfile_comparison.py 
      -f baseline_2019_MFILE.DAT ref_baseline_2019_MFILE.DAT 
      --acc 1.0 
      --baseline
    - > 
      python ../../utilities/mfile_comparison.py 
      -f baseline_2019_MFILE.DAT ref_baseline_2019_MFILE.DAT 
      --acc 10.0 
      --baseline
  tags:
   - freia

baseline_2018_freia:
  when: on_success
  only:
    - develop
  stage: freia
  <<: *build-freia-setup
  script:
    - pwd
    - cmake3 -H. -Bbuild
    - cmake3 --build build --target dicts
    - export PYTHONPATH=$PYTHONPATH:/builds/process/process/utilities/
    - cd tracking/baseline_2018
    - ./../../bin/process.exe baseline_2018_IN.DAT
    - >
      python ../../utilities/mfile_comparison.py 
      -f baseline_2018_MFILE.DAT ref_baseline_2018_MFILE.DAT 
      --acc 1.0 
      --baseline
    - > 
      python ../../utilities/mfile_comparison.py 
      -f baseline_2018_MFILE.DAT ref_baseline_2018_MFILE.DAT 
      --acc 10.0 
      --baseline
  tags:
    - freia


#-----------------
#  Pages
#-----------------

pages:
  before_script:
    - "export LOGNAME=root"
    - export LANG=C.UTF-8
    - export LC_ALL=C.UTF-8
    # Python3 uses the locale to choose the file encoding it uses
    # Without this it will use ASCII encoding and Ford will fail
  when: on_success
  only:
    - develop
    # Remove on merge to develop
    - issue-vardes-to-gitpages
  stage: pages
  image: git.ccfe.ac.uk:4567/process/process/python-coverage-ci-image:latest
  script:
    - pwd
    
    # FORD documentation
    # Ensure FORD can find create_dicts.py inside Process
    - export PYTHONPATH=$PYTHONPATH:/builds/process/process/utilities/
    - python3 lib/ford/ford.py documentation/ford/index.md
    
    # Build the MkDocs site (after FORD has been used to create the vardes)
    - mkdocs build
    
    # Publish the MkDocs and FORD sites
    - ls site
    - mv site public
    - mv ford_site public

    # Setup badges
    - git clone https://github.com/jmorris-uk/anybadge.git
    - TAG=$(git describe --abbrev=0)
    - VERSION=$(git describe)
    - declare -i CONTRIBUTORS=$(git shortlog -s -n --all | wc -l)
    - echo $CONTRIBUTORS
    - cd anybadge
    - python3 anybadge.py -v $TAG -l tag -c blue -f tag.svg
    - python3 anybadge.py -v $VERSION -l version -c blue -f version.svg
    - python3 anybadge.py -v $CONTRIBUTORS -l contributors -c blue -f contributors.svg -m "%d"
    - cp tag.svg ../public
    - cp version.svg ../public
    - cp contributors.svg ../public
    - ls ../public
    - du -shc ../public/*
    - du -shc ../public/ford_site/*
    
  artifacts:
    expire_in: 1 week
    paths:
    - public
